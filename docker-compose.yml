version: "3.6"
services:
  postgres:
    image: postgres
    container_name: postgres${DOCKER_ID}
    restart: on-failure
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./pg-init-scripts:/docker-entrypoint-initdb.d
    networks:
      - debridge-node-network
  orbitdb:
    image: debridgefinance/orbitdb:v0.1.0
    container_name: orbitdb${DOCKER_ID}
    restart: on-failure
    ports:
      - "3000:3000" #TODO: remove port forwarding
    volumes:
      - ./orbitdb-go/data:/app/data
      - ./orbitdb-go/app/orbitdb/config.yml:/app/config.yml
    networks:
      - debridge-node-network
  debridge-node:
    build: debridge_node
    container_name: debridge-node${DOCKER_ID}
    command: node dist/src/main ${DEBRIDGE_NODE_NODE_OPTIONS}
    restart: on-failure
    secrets:
      - source: keystore
        target: /home/node/keystore.json
    volumes:
      - ./data/orbitdb:/home/node/orbitdb
      - ./stats/debridge-node:/home/node/stats
      - ./config:/home/node/dist/src/config
    environment:
      - PORT=${DEBRIDGE_NODE_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - KEYSTORE_PASSWORD=${KEYSTORE_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - API_BASE_URL=${API_BASE_URL}
      - API_LOGIN=${API_LOGIN}
      - API_PASSWORD=${API_PASSWORD}
      - SENTRY_DSN=${SENTRY_DSN}
      - ORBITDB_LOGIN=${ORBITDB_LOGIN}
      - ORBITDB_PASSWORD=${ORBITDB_PASSWORD}
      - ORBITDB_URL=${ORBITDB_URL}
      - NODE_OPTIONS=${DEBRIDGE_NODE_NODE_OPTIONS}
    depends_on:
      - postgres
      - orbitdb
    networks:
      - debridge-node-network
networks:
  debridge-node-network:
    name: debridge-node-network
secrets:
  keystore:
    file: ./secrets/keystore.json